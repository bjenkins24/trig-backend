name: Deploy

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-region: us-west-1
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - name: "Login to Amazon ECR"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: "Checkout master"
        uses: actions/checkout@v2
      - name: "Create aws credentials file for docker image"
        run: "echo '[default]\naws_access_key_id='${{ secrets.AWS_ACCESS_KEY_ID }}'\naws_secret_access_key='${{ secrets.AWS_SECRET_ACCESS_KEY }}'\nregion=us-west-1' > aws_credentials"
      - name: "Build, tag, and push image to Amazon ECR"
        id: build-image
        run: |
          DOCKER_BUILDKIT=1 docker build --no-cache --progress=plain --build-arg BUILD_ENVIRONMENT=production --secret id=aws,src=aws_credentials -f .docker/php/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY
          aws --region us-west-1 ecs update-service --cluster main-frontend-production --service main-frontend-production --force-new-deployment
        env:
          ECR_REGISTRY: "${{ steps.login-ecr.outputs.registry }}"
          ECR_REPOSITORY: main-production-php
          IMAGE_TAG: "${{ github.sha }}"

